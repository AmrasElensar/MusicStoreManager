// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStoreManager.Models;
using MusicStoreManager.Services;

namespace MusicStoreManager.Migrations
{
    [DbContext(typeof(mvcMusicStoreContext))]
    [Migration("20190224215235_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicStoreManager.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumArtUrl")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(N'/Content/Images/placeholder.gif')")
                        .HasMaxLength(1024);

                    b.Property<int>("ArtistId");

                    b.Property<int>("GenreId");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(160);

                    b.HasKey("AlbumId");

                    b.HasIndex("AlbumId")
                        .HasName("IPK_ProductItem");

                    b.HasIndex("ArtistId")
                        .HasName("IFK_Artist_Album");

                    b.HasIndex("GenreId");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("MusicStoreManager.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(120);

                    b.HasKey("ArtistId");

                    b.HasIndex("ArtistId")
                        .HasName("IPK_Artist");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("MusicStoreManager.Models.Cart", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId");

                    b.Property<string>("CartId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Count");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.HasKey("RecordId");

                    b.HasIndex("AlbumId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("MusicStoreManager.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .HasMaxLength(120);

                    b.HasKey("GenreId");

                    b.HasIndex("GenreId")
                        .HasName("IPK_Genre");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("MusicStoreManager.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(70);

                    b.Property<string>("City")
                        .HasMaxLength(40);

                    b.Property<string>("Country")
                        .HasMaxLength(40);

                    b.Property<string>("Email")
                        .HasMaxLength(160);

                    b.Property<string>("FirstName")
                        .HasMaxLength(160);

                    b.Property<string>("LastName")
                        .HasMaxLength(160);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .HasMaxLength(24);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10);

                    b.Property<string>("State")
                        .HasMaxLength(40);

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<string>("Username")
                        .HasMaxLength(256);

                    b.HasKey("OrderId");

                    b.HasIndex("OrderId")
                        .HasName("IPK_Invoice");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("MusicStoreManager.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId");

                    b.Property<int>("OrderId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric(10, 2)");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("OrderDetailId")
                        .HasName("IPK_InvoiceLine");

                    b.HasIndex("OrderId")
                        .HasName("IFK_Invoice_InvoiceLine");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("MusicStoreManager.Models.Album", b =>
                {
                    b.HasOne("MusicStoreManager.Models.Artist", "Artist")
                        .WithMany("Album")
                        .HasForeignKey("ArtistId")
                        .HasConstraintName("FK__Album__ArtistId__276EDEB3");

                    b.HasOne("MusicStoreManager.Models.Genre", "Genre")
                        .WithMany("Album")
                        .HasForeignKey("GenreId")
                        .HasConstraintName("FK_Album_Genre");
                });

            modelBuilder.Entity("MusicStoreManager.Models.Cart", b =>
                {
                    b.HasOne("MusicStoreManager.Models.Album", "Album")
                        .WithMany("Cart")
                        .HasForeignKey("AlbumId")
                        .HasConstraintName("FK_Cart_Album");
                });

            modelBuilder.Entity("MusicStoreManager.Models.OrderDetail", b =>
                {
                    b.HasOne("MusicStoreManager.Models.Album", "Album")
                        .WithMany("OrderDetail")
                        .HasForeignKey("AlbumId")
                        .HasConstraintName("FK_InvoiceLine_Album");

                    b.HasOne("MusicStoreManager.Models.Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__InvoiceLi__Invoi__2F10007B");
                });
#pragma warning restore 612, 618
        }
    }
}
